/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeeReimbursementApp,
  FeeReimbursementAppInterface,
} from "../FeeReimbursementApp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_brevisProof",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidNewClaimPeriod",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "BrevisProofUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint248",
        name: "feeRebate",
        type: "uint248",
      },
      {
        indexed: false,
        internalType: "uint248",
        name: "volume30D",
        type: "uint248",
      },
      {
        indexed: false,
        internalType: "uint248",
        name: "feeRebateWithRate",
        type: "uint248",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startBlockNumber",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "endBlockNumber",
        type: "uint64",
      },
    ],
    name: "FeeRebateAccumulated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint248",
        name: "feeRebate",
        type: "uint248",
      },
    ],
    name: "FeeReimbursed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "vkHashes",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "uint16[]",
        name: "sizes",
        type: "uint16[]",
      },
    ],
    name: "VkHashesUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountAccumulatedFee",
    outputs: [
      {
        internalType: "uint248",
        name: "",
        type: "uint248",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountClaimPeriod",
    outputs: [
      {
        internalType: "uint64",
        name: "startBlockNumber",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endBlockNumber",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_chainId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "commitHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "vkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "appCommitHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "appVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "smtRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct Brevis.ProofData[]",
        name: "_proofDataArray",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "_appCircuitOutputs",
        type: "bytes[]",
      },
    ],
    name: "brevisBatchCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_appCircuitOutput",
        type: "bytes",
      },
    ],
    name: "brevisCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "brevisProof",
    outputs: [
      {
        internalType: "contract IBrevisProof",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRebateTierModule",
    outputs: [
      {
        internalType: "contract IFeeRebateTierModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardTokenDecimals",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_brevisProof",
        type: "address",
      },
    ],
    name: "setBrevisProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
    ],
    name: "setClaimer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFeeRebateTierModule",
        name: "_feeRebateTierModule",
        type: "address",
      },
    ],
    name: "setFeeRebateTierModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_decimals",
        type: "uint24",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_vkHashes",
        type: "bytes32[]",
      },
      {
        internalType: "uint16[]",
        name: "_sizes",
        type: "uint16[]",
      },
    ],
    name: "setVkHashes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_chainId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "commitHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "vkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "appCommitHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "appVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "smtRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct Brevis.ProofData",
        name: "_proofData",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "uint8",
        name: "_nodeIndex",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "_appCircuitOutput",
        type: "bytes",
      },
    ],
    name: "singleRun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_chainId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "smtRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "blkNum",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "receiptIndex",
                type: "uint64",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "valueFromTopic",
                        type: "uint8",
                      },
                      {
                        internalType: "uint64",
                        name: "valueIndex",
                        type: "uint64",
                      },
                      {
                        internalType: "address",
                        name: "contractAddress",
                        type: "address",
                      },
                      {
                        internalType: "bytes32",
                        name: "logTopic0",
                        type: "bytes32",
                      },
                    ],
                    internalType: "struct Brevis.LogExtraInfo",
                    name: "logExtraInfo",
                    type: "tuple",
                  },
                  {
                    internalType: "uint64",
                    name: "logIndex",
                    type: "uint64",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Brevis.LogInfo[5]",
                name: "logs",
                type: "tuple[5]",
              },
            ],
            internalType: "struct Brevis.ReceiptInfo[]",
            name: "receipts",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "slotValue",
                type: "bytes32",
              },
              {
                internalType: "uint64",
                name: "blockNumber",
                type: "uint64",
              },
            ],
            internalType: "struct Brevis.StorageInfo[]",
            name: "stores",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "leafHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
              },
              {
                internalType: "uint64",
                name: "blockNumber",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "blockTime",
                type: "uint64",
              },
              {
                internalType: "bytes",
                name: "leafRlpPrefix",
                type: "bytes",
              },
            ],
            internalType: "struct Brevis.TransactionInfo[]",
            name: "txs",
            type: "tuple[]",
          },
        ],
        internalType: "struct Brevis.ExtractInfos",
        name: "_extractInfos",
        type: "tuple",
      },
    ],
    name: "validateRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "vkHashesToCircuitSize",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080346100a957601f611d5438819003918201601f19168301916001600160401b038311848410176100ae578084926020946040528339810103126100a957516001600160a01b0390818116908190036100a95760018060a01b031990816000541617600055600154903390821617600155604051913391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3611c8f90816100c58239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60c0604052600436101561001257600080fd5b6000803560e01c80631dd3f354146116c25780631e83409a146115fb5780635419f27c146115af5780635d1c29eb146113e9578063715018a61461138957806379d6b6a21461106b5780637c08aa74146109705780637f239c4d146109495780638da5cb5b146109225780639bdcecd1146108fc578063a184a0c7146108ce578063ada323ff14610841578063b18c086814610800578063b90c209a146107b6578063c772c87f14610746578063c7f5aaa014610720578063cdfb5832146106d9578063d379be23146106b2578063ed1fe83b1461020c578063f2fde38b1461012d5763f7c618c11461010457600080fd5b3461012a578060031936011261012a5760206001600160a01b0360025416604051908152f35b80fd5b503461012a57602036600319011261012a5761014761183f565b600154906001600160a01b03808316916101623384146119de565b169182156101a1576001600160a01b03191682176001557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608490fd5b503461012a57606036600319011261012a57610226611869565b67ffffffffffffffff602435116106ae573660236024350112156106ae5767ffffffffffffffff60243560040135116106ae5736602460a08135600401350281350101116106ae5760443567ffffffffffffffff81116106aa5761028e90369060040161180e565b61029f816024356004013514611a74565b6001600160a01b0384541692833b156106a65784906040519063cf7ac5a960e01b825267ffffffffffffffff604483019116600483015260406024830152602435600401359052606481019460248035019586845b60243560040135811061066557505083918380809303915afa801561065a57610642575b505b60243560040135811061032b578480f35b6103656040610341836024356004013588611ae5565b0135610358610351848688611b0b565b3691611997565b6020815191012014611a29565b610376816024356004013586611ae5565b50606061038a826024356004013587611ae5565b0135610397828486611b0b565b90918752600560205261ffff6040882054161561060a5780601411610606578060331161060657806052116106065780605a116106065760621161060257601481013560081c908180610526575b610402823560601c605a84013560c01c605285013560c01c611b8a565b823560601c89526006602052604089209067ffffffffffffffff8151166fffffffffffffffff00000000000000006020845493015160401b16916fffffffffffffffffffffffffffffffff19161717905560076020526001600160f81b036040892054166001600160f81b038083168201116105125792605a836001600160f81b0360c09461050d98978260408f7f865837efc36f96ff0de4b15e50b0ead4bf18a6928f7045e7e39161eebf7c5dc79a3560601c815260076020522091818416011660ff60f81b82541617905560405194833560601c86526020860152603383013560081c60408601521660608401526052810135841c60808401520135821c60a0820152a1611ac0565b61031a565b634e487b7160e01b89526011600452602489fd5b602460206001600160a01b03600354166040519283809263b72bf50960e01b8252603388013560081c60048301525afa80156105f75789906105a8575b67ffffffffffffffff9150168061057b575b506103e5565b90806001600160f81b03838202160482148115171561051257606491026001600160f81b03160438610575565b506020813d6020116105ef575b816105c26020938361195d565b810103126105eb575167ffffffffffffffff811681036105eb5767ffffffffffffffff90610563565b8880fd5b3d91506105b5565b6040513d8b823e3d90fd5b8580fd5b8680fd5b60405162461bcd60e51b815260206004820152601060248201526f1d9ad2185cda081b9bdd081d985b1a5960821b6044820152606490fd5b61064b906118c3565b610656578338610318565b8380fd5b6040513d84823e3d90fd5b813583526020808301359084015260408083013590840152606080830135908401526080808301359084015289955060a092830192909101906001016102f4565b8480fd5b8280fd5b5080fd5b503461012a578060031936011261012a5760206001600160a01b0360045416604051908152f35b503461012a57602036600319011261012a576106f361183f565b6001600160a01b039061070b826001541633146119de565b166001600160a01b0319600454161760045580f35b503461012a578060031936011261012a576001600160a01b036020915416604051908152f35b503461012a57602036600319011261012a577f1bf3143ab1544528303e489724067fb6c3ff3f7e3b0a6df041cae24242e44773602061078361183f565b6001600160a01b039061079b826001541633146119de565b16806001600160a01b0319855416178455604051908152a180f35b503461012a57602036600319011261012a576004356001600160a01b038082168092036106aa576107ec906001541633146119de565b6001600160a01b0319600354161760035580f35b503461012a57602036600319011261012a576001600160f81b0360406020926001600160a01b0361082f61183f565b16815260078452205416604051908152f35b503461012a57604036600319011261012a5761085b61183f565b60243562ffffff811681036106aa577fffffffffffffffffff00000000000000000000000000000000000000000000006001600160a01b036108a2816001541633146119de565b76ffffff00000000000000000000000000000000000000006002549360a01b1693169116171760025580f35b503461012a57602036600319011261012a5761ffff6040602092600435815260058452205416604051908152f35b503461012a578060031936011261012a57602062ffffff60025460a01c16604051908152f35b503461012a578060031936011261012a5760206001600160a01b0360015416604051908152f35b503461012a578060031936011261012a5760206001600160a01b0360035416604051908152f35b503461012a576003196060368201126106ae576024359067ffffffffffffffff82168203611056576044359067ffffffffffffffff82116106565760809082360301126106aa57604051906109c4826118ed565b80600401358252602481013567ffffffffffffffff81116106a6578101366023820112156106a6576004810135906109fb8261197f565b91610a09604051938461195d565b808352602083019136602483600a1b83010111610eda5760248101925b602483600a1b8301018410610f4257505050506020830152604481013567ffffffffffffffff81116106a6578101366023820112156106a657600481013590610a6e8261197f565b91610a7c604051938461195d565b808352602083019136602460a0840283010111610eda579160248301925b602460a084028201018410610ede5750505050604083015260648101359067ffffffffffffffff82116106a6573660238383010112156106a6576004828201013590610ae58261197f565b92610af3604051948561195d565b82845260208401913660248560051b848401010111610eda57602482820101925b60248560051b84840101018410610e0857505050505060608201526001600160a01b0383541690813b156106565791839167ffffffffffffffff93604051948593631f022a9d60e21b855260043560048601521660248401526060604484015260e48301908051606485015260208101519160806084860152825180915260206101048601930190865b818110610d45575050506040810151916063198582030160a486015260208084519283815201930190865b818110610ce65750505060600151906063198482030160c4850152815180825260208201916020808360051b83010194019287915b838310610c3b57505050505082809103915afa801561065a57610c27575b602060405160018152f35b610c3182916118c3565b61012a5780610c1c565b9295975092955092601f1982820301835260808651805183526020810151602084015267ffffffffffffffff604082015116604084015267ffffffffffffffff606082015116606084015201519060a060808201528151918260a08301528a5b838110610cd05750506020600192819260c0918d838284010152601f8019910116010197019301930187959389979592610bfe565b80602080928401015160c0828601015201610c9b565b929496509281955060a060209167ffffffffffffffff608060019551805184526001600160a01b038682015116868501526040810151604085015260608101516060850152015116608082015201950191019086949288969492610bc9565b92949650929094506040855167ffffffffffffffff815116835267ffffffffffffffff60208201511660208401520151604082019089915b60058310610da257505050602061040060019201950191019086949288969492610b9e565b602060c0600192604085516060815160ff815116855267ffffffffffffffff8782015116878601526001600160a01b038482015116848601520151606084015267ffffffffffffffff85820151166080840152015160a082015201920192019190610d7d565b833567ffffffffffffffff8111610ed65760a0838501820136036023190112610ed65760405191610e3883611925565b83850182016024810135845260448101356020850152610e5a90606401611880565b6040840152610e6f6084838787010101611880565b606084015260a4828686010101359067ffffffffffffffff8211610ed25736604383858989010101011215610ed2576024936020938493610ec09136918a8a01909101018088013590604401611997565b60808201528152019401939050610b14565b8b80fd5b8980fd5b8780fd5b60a0843603126105eb5760a0806020602494604051610efc81611925565b88358152610f0b838a01611855565b838201526040890135604082015260608901356060820152610f2f60808a01611880565b6080820152815201950194925050610a9a565b6104008085360312610ed65760405190610f5b82611909565b610f6486611880565b8252610f7260208701611880565b602083015236605f870112156110675760405190610f8f82611925565b819036818901116110635760408801915b8189018310610fc357505050604082015281526104009390930192602001610a26565b60c08336031261105f57604051610fd981611909565b60808436031261105b5760405191610ff0836118ed565b84359160ff83168303611056578360209360c09552611010848801611880565b8482015261102060408801611855565b604082015260608701356060820152815261103d60808701611880565b8382015260a08601356040820152815201920191610fa0565b600080fd5b8e80fd5b8d80fd5b8c80fd5b8a80fd5b503461012a57604036600319011261012a57602467ffffffffffffffff81358181116106565761109f903690600401611895565b906001600160a01b039084604083885416815197888092632cc27dc960e11b825260043560048301525afa801561137e5787968891611345575b506110f76110e8368786611997565b9788516020809a012014611a29565b87526005865261ffff6040882054161561130f578360141161060657813560601c9584603311610eda57601483013560081c91856052116105eb57603384013560081c9386605a11610ed657605281013560c01c96606211610ed657605a013560c01c96839582848615928315611253575b50505050611178898989611b8a565b898b526006845260408b20918151166fffffffffffffffff000000000000000085845493015160401b16916fffffffffffffffffffffffffffffffff191617179055600782526001600160f81b03808060408c20541696168096019181831161124157509160c097959391899795937f865837efc36f96ff0de4b15e50b0ead4bf18a6928f7045e7e39161eebf7c5dc79a8c526007835260408c20911660ff60f81b82541617905560405196875286015260408501526060840152608083015260a0820152a180f35b634e487b7160e01b8b5260116004528afd5b600354166040519283809263b72bf50960e01b82528b60048301525afa80156113045783918d916112ca575b50169081611290575b848491611169565b909196506001600160f81b0382860216918583041417156112b75760649004943880611288565b50634e487b7160e01b8952601160045288fd5b809250868092503d83116112fd575b6112e3818361195d565b81010312610ed257518281168103610ed25782903861127f565b503d6112d9565b6040513d8e823e3d90fd5b8560106064926040519262461bcd60e51b845260048401528201526f1d9ad2185cda081b9bdd081d985b1a5960821b6044820152fd5b9650506040863d604011611376575b816113616040938361195d565b810103126106065760208651960151386110d9565b3d9150611354565b6040513d89823e3d90fd5b503461012a578060031936011261012a5760006001546001600160a01b03196001600160a01b038216916113be3384146119de565b166001557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461012a5761014036600319011261012a57611404611869565b60a03660231901126106ae5767ffffffffffffffff60e4358181116106565761143190369060040161180e565b926101049182359060ff821680920361060657866101249687358781116106aa57611460903690600401611895565b9690946001600160a01b03968785541692833b15610602578a9260405197889687958695632247cd8f60e01b875216600486015260249e8f803590870152604435604487015260643580608052606487015260843560a05260a051608487015260a43560a487015260c43560c487015260e4860161012090528501906114e592611b4d565b9183015203915afa801561137e5761159c575b50611504368483611997565b94611519865160208098012060805114611a29565b60a05187526005865261ffff6040882054161561130f578360141161060657813560601c9584603311610eda57601483013560081c91856052116105eb57603384013560081c9386605a11610ed657605281013560c01c96606211610ed657605a013560c01c968395828486159283156112535750505050611178898989611b8a565b6115a8909691966118c3565b94386114f8565b503461012a57602036600319011261012a57604080916001600160a01b036115d561183f565b1681526006602052205481519067ffffffffffffffff908181168352831c166020820152f35b503461012a57602036600319011261012a5761161561183f565b6001600160a01b03908160045416330361167d577f17525e7c25776b686f3c5fb5714aac26a41bdccd536c711002922e7e5ffb4c2c916040911680845260076020526001600160f81b0382852080549060ff60f81b821690558351928352166020820152a180f35b60405162461bcd60e51b815260206004820152601760248201527f696e76616c696420636c61696d657220616464726573730000000000000000006044820152606490fd5b503461012a57604036600319011261012a5767ffffffffffffffff6004358181116106aa576116f590369060040161180e565b916024359081116106565761170e90369060040161180e565b90916001906117286001600160a01b0383541633146119de565b611733838614611a74565b855b8581106117bf57506117539060405195604087526040870191611b4d565b916020838682950382880152828152019392865b82811061179857877fb3f7d79a2f90dac793ddd7d86f2d7d5d073e107289c685083e9d4329f1640f5c88880389a180f35b909192939485359061ffff82168092036105eb579081528201948201939291908301611767565b6117cd818587969596611c49565b359061ffff8216809203610eda57611806916117ea828986611c49565b3589526005602052604089209061ffff19825416179055611ac0565b929192611735565b9181601f840112156110565782359167ffffffffffffffff8311611056576020808501948460051b01011161105657565b600435906001600160a01b038216820361105657565b35906001600160a01b038216820361105657565b6004359067ffffffffffffffff8216820361105657565b359067ffffffffffffffff8216820361105657565b9181601f840112156110565782359167ffffffffffffffff8311611056576020838186019501011161105657565b67ffffffffffffffff81116118d757604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff8211176118d757604052565b6060810190811067ffffffffffffffff8211176118d757604052565b60a0810190811067ffffffffffffffff8211176118d757604052565b6040810190811067ffffffffffffffff8211176118d757604052565b90601f8019910116810190811067ffffffffffffffff8211176118d757604052565b67ffffffffffffffff81116118d75760051b60200190565b92919267ffffffffffffffff82116118d757604051916119c1601f8201601f19166020018461195d565b829481845281830111611056578281602093846000960137010152565b156119e557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15611a3057565b606460405162461bcd60e51b815260206004820152602060248201527f6661696c656420746f206f70656e206f757470757420636f6d6d69746d656e746044820152fd5b15611a7b57565b60405162461bcd60e51b815260206004820152601060248201527f6c656e677468206e6f74206d61746368000000000000000000000000000000006044820152606490fd5b6000198114611acf5760010190565b634e487b7160e01b600052601160045260246000fd5b9190811015611af55760a0020190565b634e487b7160e01b600052603260045260246000fd5b9190811015611af55760051b81013590601e198136030182121561105657019081359167ffffffffffffffff8311611056576020018236038113611056579190565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83116110565760209260051b809284830137010190565b9092916001600160a01b039060006020604051611ba681611941565b8281520152166000526006602052604060002060405190611bc682611941565b549267ffffffffffffffff91828086169586835260401c166020820195818752159081611c40575b50611c335782808251169616958610611c2957505080835116911611611c21575b604051632d75bc4f60e01b8152600490fd5b523880611c0f565b9350935016815290565b9282168352931690915290565b90501538611bee565b9190811015611af55760051b019056fea264697066735822122012d95bf623e249b2610303798b65c7b6826fcacb3587700c6e41abe6918d9da964736f6c63430008140033";

type FeeReimbursementAppConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeReimbursementAppConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeReimbursementApp__factory extends ContractFactory {
  constructor(...args: FeeReimbursementAppConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FeeReimbursementApp";
  }

  deploy(
    _brevisProof: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeReimbursementApp> {
    return super.deploy(
      _brevisProof,
      overrides || {}
    ) as Promise<FeeReimbursementApp>;
  }
  getDeployTransaction(
    _brevisProof: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_brevisProof, overrides || {});
  }
  attach(address: string): FeeReimbursementApp {
    return super.attach(address) as FeeReimbursementApp;
  }
  connect(signer: Signer): FeeReimbursementApp__factory {
    return super.connect(signer) as FeeReimbursementApp__factory;
  }
  static readonly contractName: "FeeReimbursementApp";
  public readonly contractName: "FeeReimbursementApp";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeReimbursementAppInterface {
    return new utils.Interface(_abi) as FeeReimbursementAppInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeReimbursementApp {
    return new Contract(address, _abi, signerOrProvider) as FeeReimbursementApp;
  }
}
