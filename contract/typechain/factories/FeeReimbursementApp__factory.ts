/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeeReimbursementApp,
  FeeReimbursementAppInterface,
} from "../FeeReimbursementApp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_brevisProof",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidNewClaimPeriod",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint248",
        name: "feeRebate",
        type: "uint248",
      },
      {
        indexed: false,
        internalType: "uint248",
        name: "volume30D",
        type: "uint248",
      },
      {
        indexed: false,
        internalType: "uint248",
        name: "feeRebateWithRate",
        type: "uint248",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startBlockNumber",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "endBlockNumber",
        type: "uint64",
      },
    ],
    name: "FeeRebateAccumulated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint248",
        name: "feeRebate",
        type: "uint248",
      },
    ],
    name: "FeeReimbursed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "vkHashes",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "uint16[]",
        name: "sizes",
        type: "uint16[]",
      },
    ],
    name: "VkHashesUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    name: "accountIdAccumulatedFee",
    outputs: [
      {
        internalType: "uint248",
        name: "",
        type: "uint248",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    name: "accountIdClaimPeriod",
    outputs: [
      {
        internalType: "uint64",
        name: "startBlockNumber",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endBlockNumber",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_chainId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "commitHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "vkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "appCommitHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "appVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "smtRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct Brevis.ProofData[]",
        name: "_proofDataArray",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "_appCircuitOutputs",
        type: "bytes[]",
      },
    ],
    name: "brevisBatchCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_appCircuitOutput",
        type: "bytes",
      },
    ],
    name: "brevisCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "brevisProof",
    outputs: [
      {
        internalType: "contract IBrevisProof",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRebateTierModule",
    outputs: [
      {
        internalType: "contract IFeeRebateTierModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardTokenDecimals",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
    ],
    name: "setClaimer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFeeRebateTierModule",
        name: "_feeRebateTierModule",
        type: "address",
      },
    ],
    name: "setFeeRebateTierModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_decimals",
        type: "uint24",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_vkHashes",
        type: "bytes32[]",
      },
      {
        internalType: "uint16[]",
        name: "_sizes",
        type: "uint16[]",
      },
    ],
    name: "setVkHashes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_chainId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "commitHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "vkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "appCommitHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "appVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "smtRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct Brevis.ProofData",
        name: "_proofData",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "uint8",
        name: "_nodeIndex",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "_appCircuitOutput",
        type: "bytes",
      },
    ],
    name: "singleRun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_chainId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "smtRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "blkNum",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "receiptIndex",
                type: "uint64",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "valueFromTopic",
                        type: "uint8",
                      },
                      {
                        internalType: "uint64",
                        name: "valueIndex",
                        type: "uint64",
                      },
                      {
                        internalType: "address",
                        name: "contractAddress",
                        type: "address",
                      },
                      {
                        internalType: "bytes32",
                        name: "logTopic0",
                        type: "bytes32",
                      },
                    ],
                    internalType: "struct Brevis.LogExtraInfo",
                    name: "logExtraInfo",
                    type: "tuple",
                  },
                  {
                    internalType: "uint64",
                    name: "logIndex",
                    type: "uint64",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Brevis.LogInfo[5]",
                name: "logs",
                type: "tuple[5]",
              },
            ],
            internalType: "struct Brevis.ReceiptInfo[]",
            name: "receipts",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "slotValue",
                type: "bytes32",
              },
              {
                internalType: "uint64",
                name: "blockNumber",
                type: "uint64",
              },
            ],
            internalType: "struct Brevis.StorageInfo[]",
            name: "stores",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "leafHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
              },
              {
                internalType: "uint64",
                name: "blockNumber",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "blockTime",
                type: "uint64",
              },
              {
                internalType: "bytes",
                name: "leafRlpPrefix",
                type: "bytes",
              },
            ],
            internalType: "struct Brevis.TransactionInfo[]",
            name: "txs",
            type: "tuple[]",
          },
        ],
        internalType: "struct Brevis.ExtractInfos",
        name: "_extractInfos",
        type: "tuple",
      },
    ],
    name: "validateRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "vkHashesToCircuitSize",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0346100d357601f611da238819003918201601f19168301916001600160401b038311848410176100d8578084926020946040528339810103126100d357516001600160a01b0390818116908190036100d3576080526000543360018060a01b0319821617600055604051913391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3611cb390816100ef82396080518181816102a1015281816103220152818161075e01528181610ac001528181610bb50152818161107001526114f90152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60c080604052600436101561001357600080fd5b600090813560e01c9081630e2940c6146117e3575080631dd3f354146116a15780635a947cd61461165c5780635d1c29eb1461147357806360e72adb146113a4578063715018a61461134457806379d6b6a2146110135780637c08aa74146108f85780637f239c4d146108d15780638da5cb5b146108ab5780639bdcecd114610885578063a184a0c714610857578063ada323ff146107cb578063b90c209a14610782578063c7f5aaa01461073e578063cdfb5832146106f8578063d379be23146106d1578063ed1fe83b14610207578063f2fde38b146101265763f7c618c1146100fd57600080fd5b3461012357806003193601126101235760206001600160a01b0360015416604051908152f35b80fd5b503461012357602036600319011261012357610140611991565b6001600160a01b038091610158828554163314611a02565b1690811561019c57600054826001600160a01b0319821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608490fd5b503461012357606036600319011261012357610221611863565b6024359067ffffffffffffffff82116106cd57366023830112156106cd5767ffffffffffffffff8260040135116106cd5736602460a0846004013502840101116106cd5760443567ffffffffffffffff81116106c957610285903690600401611832565b92909161029784836004013514611a98565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b15610679576040519063cf7ac5a960e01b825267ffffffffffffffff60448301911660048301526040602483015282600401359052846064820191602484019283835b866004013581106106885750508180849203816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa801561067d57610665575b505b82600401358110610360578580f35b610398604061037483866004013586611b09565b013561038b610384848989611b2f565b36916119bb565b6020815191012014611a4d565b6103a781846004013584611b09565b5060606103b982856004013585611b09565b01356103c6828787611b2f565b90918852600460205261ffff6040892054161561062d57806010116106295780602f116106295780604e11610629578060561161062957605e1161062557601081013560081c90818061054d575b610431823560801c605684013560c01c604e85013560c01c611bae565b823560801c8a52600560205260408a209067ffffffffffffffff8151166fffffffffffffffff00000000000000006020845493015160401b16916001600160801b0319161717905560066020526001600160f81b0360408a2054166001600160f81b0380831682011161053957926056836001600160f81b0360c0946105349897828f6040907f7a3c72ab830fe8e1974c24551d02bf70dfa5d4c769f39895c9c1f32d353cb8b39a3560801c815260066020522091818416011660ff60f81b82541617905560405194833560801c86526020860152602f83013560081c6040860152166060840152604e810135841c60808401520135821c60a0820152a1611ae4565b610351565b634e487b7160e01b8a52601160045260248afd5b602460206001600160a01b03600254166040519283809263b72bf50960e01b8252602f88013560081c60048301525afa801561061a578a906105cb575b67ffffffffffffffff915016806105a2575b50610414565b90806001600160f81b03838202160482148115171561053957026001600160f81b03163861059c565b506020813d602011610612575b816105e560209383611957565b8101031261060e575167ffffffffffffffff8116810361060e5767ffffffffffffffff9061058a565b8980fd5b3d91506105d8565b6040513d8c823e3d90fd5b8680fd5b8780fd5b60405162461bcd60e51b815260206004820152601060248201526f1d9ad2185cda081b9bdd081d985b1a5960821b6044820152606490fd5b61066e906118bd565b61067957843861034f565b8480fd5b6040513d84823e3d90fd5b813583526020808301359084015260408083013590840152606080830135908401526080808301359084015289945060a09283019290910190600101610305565b8380fd5b8280fd5b503461012357806003193601126101235760206001600160a01b0360035416604051908152f35b503461012357602036600319011261012357610712611991565b6001600160a01b0390610729828454163314611a02565b166001600160a01b0319600354161760035580f35b503461012357806003193601126101235760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5034610123576020366003190112610123576004356001600160a01b038082168092036106cd576107b7908354163314611a02565b6001600160a01b0319600254161760025580f35b5034610123576040366003190112610123576107e5611991565b60243562ffffff811681036106cd577fffffffffffffffffff00000000000000000000000000000000000000000000006001600160a01b0361082b818654163314611a02565b76ffffff00000000000000000000000000000000000000006001549360a01b1693169116171760015580f35b50346101235760203660031901126101235761ffff6040602092600435815260048452205416604051908152f35b5034610123578060031936011261012357602062ffffff60015460a01c16604051908152f35b50346101235780600319360112610123576001600160a01b036020915416604051908152f35b503461012357806003193601126101235760206001600160a01b0360025416604051908152f35b503461012357600319906060368301126101235760243567ffffffffffffffff81168103611002576044359267ffffffffffffffff84116106cd576080908436030112610db1576040519261094c846118e7565b80600401358452602481013567ffffffffffffffff81116106c9578101366023820112156106c95760048101359061098382611979565b916109916040519384611957565b808352602083019136602483600a1b830101116106255760248101925b602483600a1b8301018410610eee57505050506020850152604481013567ffffffffffffffff81116106c9578101366023820112156106c9576004810135906109f682611979565b91610a046040519384611957565b808352602083019136602460a08402830101116106255760248101925b602460a084028301018410610e885750505050604085015260648101359067ffffffffffffffff82116106c9573660238383010112156106c9576004828201013590610a6c82611979565b92610a7a6040519485611957565b82845260208401913660248560051b84840101011161062557602482820101925b60248560051b84840101018410610db557505050505060608401526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b15610db15767ffffffffffffffff60405191631f022a9d60e21b835260043560048401521660248201526060604482015260e48101928051606483015260208101519360806084840152845180915260206101048401950190845b818110610cfb575050506040810151936063198382030160a484015260208086519283815201950190845b818110610ca65750505060600151926063198282030160c4830152835180825260208201916020808360051b83010196019285915b838310610c015786868181808c03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa801561067d57610bed575b602060405160018152f35b610bf782916118bd565b6101235780610be2565b9091929396601f1982820301835260808851805183526020810151602084015267ffffffffffffffff604082015116604084015267ffffffffffffffff606082015116606084015201519060a060808201528151918260a0830152885b838110610c9057505080820160c0908101899052601f909201601f191601019660209081019493600101920190610b9c565b80602080928401015160c0828601015201610c5e565b909195602060a060019267ffffffffffffffff60808b51805184526001600160a01b03868201511686850152604081015160408501526060810151606085015201511660808201520197019101919091610b67565b9091956040875167ffffffffffffffff815116835267ffffffffffffffff60208201511660208401520151604082019087915b60058310610d4b5750505061040001956020019190600101610b3c565b602060c0600192604085516060815160ff815116855267ffffffffffffffff8782015116878601526001600160a01b038482015116848601520151606084015267ffffffffffffffff85820151166080840152015160a082015201920192019190610d2e565b5080fd5b833567ffffffffffffffff8111610e845760a0838501820136036023190112610e845760405190610de58261191f565b83850181016024810135835260448101356020840152610e079060640161187a565b6040830152610e1c608482878701010161187a565b606083015260a48186860101013567ffffffffffffffff8111610e805736604382848989010101011215610e8057602493602093849391929091610e6e9136918a8a01010180880135906044016119bb565b60808201528152019401939050610a9b565b8a80fd5b8880fd5b60a084360312610629579060a0806020602494604051610ea78161191f565b88358152610eb6838a016119a7565b838201526040890135604082015260608901356060820152610eda60808a0161187a565b608082015281520195019491925050610a21565b6104008085360312610e845760405190610f0782611903565b610f108661187a565b8252610f1e6020870161187a565b602083015236605f8701121561060e5760405190610f3b8261191f565b8190368189011161100f5760408801915b8189018310610f6f575050506040820152815261040093909301926020016109ae565b60c08336031261100b57604051610f8581611903565b6080843603126110075760405191610f9c836118e7565b84359160ff83168303611002578360209360c09552610fbc84880161187a565b84820152610fcc604088016119a7565b6040820152606087013560608201528152610fe96080870161187a565b8382015260a08601356040820152815201920191610f4c565b600080fd5b8d80fd5b8c80fd5b8b80fd5b503461012357604036600319011261012357602467ffffffffffffffff81358181116106c95761104790369060040161188f565b909260405193632cc27dc960e11b855260043560048601526001600160a01b03916040868281867f0000000000000000000000000000000000000000000000000000000000000000165afa80156113395787968891611300575b506110bf6110b03687866119bb565b9788516020809a012014611a4d565b87526004865261ffff604088205416156112ca578360101161062557813560801c9584602f1161062957601083013560081c9185604e11610e8457602f84013560081c938660561161060e57604e81013560c01c96605e1161060e576056013560c01c96839582848615928315611212575b50505050611140898989611bae565b898b526005845260408b20918151166fffffffffffffffff000000000000000085845493015160401b16916001600160801b03191617179055600682526001600160f81b03808060408c20541696168096019181831161120057509160c097959391899795937f7a3c72ab830fe8e1974c24551d02bf70dfa5d4c769f39895c9c1f32d353cb8b39a8c526006835260408c20911660ff60f81b82541617905560405196875286015260408501526060840152608083015260a0820152a180f35b634e487b7160e01b8b5260116004528afd5b600254166040519283809263b72bf50960e01b82528b60048301525afa80156112bf5783918d91611285575b5016908161124f575b848491611131565b909196506001600160f81b03828602169185830414171561127257943880611247565b50634e487b7160e01b8952601160045288fd5b809250868092503d83116112b8575b61129e8183611957565b8101031261100f5751828116810361100f5782903861123e565b503d611294565b6040513d8e823e3d90fd5b8560106064926040519262461bcd60e51b845260048401528201526f1d9ad2185cda081b9bdd081d985b1a5960821b6044820152fd5b9650506040863d604011611331575b8161131c60409383611957565b810103126106255760208651960151386110a1565b3d915061130f565b6040513d89823e3d90fd5b503461012357806003193601126101235760006001600160a01b0361136d818454163314611a02565b81546001600160a01b031981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610123576020366003190112610123576004356001600160801b038116809103610db1576001600160a01b0360035416330361142e576040817f85107afb8ddb8c9c60a11876082216a29d3e456d503ab5637566523988fa0f1192845260066020526001600160f81b0382852080549060ff60f81b821690558351928352166020820152a180f35b60405162461bcd60e51b815260206004820152601760248201527f696e76616c696420636c61696d657220616464726573730000000000000000006044820152606490fd5b5034610123576101403660031901126101235761148e611863565b60a0366023190112610db15767ffffffffffffffff60e4358181116106c9576114bb903690600401611832565b926101049182359060ff821680920361062557866101249687358781116106cd576114ea90369060040161188f565b9690946001600160a01b0396877f00000000000000000000000000000000000000000000000000000000000000001692833b15611658578a9260405197889687958695632247cd8f60e01b875216600486015260249e8f803590870152604435604487015260643580608052606487015260843560a05260a051608487015260a43560a487015260c43560c487015260e48601610120905285019061158e92611b71565b9183015203915afa801561133957611645575b506115ad3684836119bb565b946115c2865160208098012060805114611a4d565b60a05187526004865261ffff604088205416156112ca578360101161062557813560801c9584602f1161062957601083013560081c9185604e11610e8457602f84013560081c938660561161060e57604e81013560c01c96605e1161060e576056013560c01c968395828486159283156112125750505050611140898989611bae565b611651909691966118bd565b94386115a1565b8580fd5b5034610123576020366003190112610123576004356001600160801b038116809103610db1576040826001600160f81b03926020945260068452205416604051908152f35b50346101235760403660031901126101235767ffffffffffffffff6004358181116106cd576116d4903690600401611832565b916024359081116106c9576116ed903690600401611832565b90916117046001600160a01b038654163314611a02565b61170f828514611a98565b845b84811061179a575061172f9060405194604086526040860191611b71565b906020828582940382870152828152019291855b82811061177457867fb3f7d79a2f90dac793ddd7d86f2d7d5d073e107289c685083e9d4329f1640f5c87870388a180f35b9091929384359061ffff8216809203610629579081528201938201929190600101611743565b6117a5818486611c6d565b359061ffff8216809203610625576117de916117c2828886611c6d565b3588526004602052604088209061ffff19825416179055611ae4565b611711565b905034610db1576020366003190112610db1576004356001600160801b0381168091036106cd5782604093918492526005602052205467ffffffffffffffff908181168352831c166020820152f35b9181601f840112156110025782359167ffffffffffffffff8311611002576020808501948460051b01011161100257565b6004359067ffffffffffffffff8216820361100257565b359067ffffffffffffffff8216820361100257565b9181601f840112156110025782359167ffffffffffffffff8311611002576020838186019501011161100257565b67ffffffffffffffff81116118d157604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff8211176118d157604052565b6060810190811067ffffffffffffffff8211176118d157604052565b60a0810190811067ffffffffffffffff8211176118d157604052565b6040810190811067ffffffffffffffff8211176118d157604052565b90601f8019910116810190811067ffffffffffffffff8211176118d157604052565b67ffffffffffffffff81116118d15760051b60200190565b600435906001600160a01b038216820361100257565b35906001600160a01b038216820361100257565b92919267ffffffffffffffff82116118d157604051916119e5601f8201601f191660200184611957565b829481845281830111611002578281602093846000960137010152565b15611a0957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15611a5457565b606460405162461bcd60e51b815260206004820152602060248201527f6661696c656420746f206f70656e206f757470757420636f6d6d69746d656e746044820152fd5b15611a9f57565b60405162461bcd60e51b815260206004820152601060248201527f6c656e677468206e6f74206d61746368000000000000000000000000000000006044820152606490fd5b6000198114611af35760010190565b634e487b7160e01b600052601160045260246000fd5b9190811015611b195760a0020190565b634e487b7160e01b600052603260045260246000fd5b9190811015611b195760051b81013590601e198136030182121561100257019081359167ffffffffffffffff8311611002576020018236038113611002579190565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83116110025760209260051b809284830137010190565b9092916001600160801b039060006020604051611bca8161193b565b8281520152166000526005602052604060002060405190611bea8261193b565b549267ffffffffffffffff91828086169586835260401c166020820195818752159081611c64575b50611c575782808251169616958610611c4d57505080835116911611611c45575b604051632d75bc4f60e01b8152600490fd5b523880611c33565b9350935016815290565b9282168352931690915290565b90501538611c12565b9190811015611b195760051b019056fea2646970667358221220370e6fd67db2ef0557c18d02ad725c1948afbed98348d2e317f94a7ab861967b64736f6c63430008140033";

type FeeReimbursementAppConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeReimbursementAppConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeReimbursementApp__factory extends ContractFactory {
  constructor(...args: FeeReimbursementAppConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FeeReimbursementApp";
  }

  deploy(
    _brevisProof: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeReimbursementApp> {
    return super.deploy(
      _brevisProof,
      overrides || {}
    ) as Promise<FeeReimbursementApp>;
  }
  getDeployTransaction(
    _brevisProof: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_brevisProof, overrides || {});
  }
  attach(address: string): FeeReimbursementApp {
    return super.attach(address) as FeeReimbursementApp;
  }
  connect(signer: Signer): FeeReimbursementApp__factory {
    return super.connect(signer) as FeeReimbursementApp__factory;
  }
  static readonly contractName: "FeeReimbursementApp";
  public readonly contractName: "FeeReimbursementApp";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeReimbursementAppInterface {
    return new utils.Interface(_abi) as FeeReimbursementAppInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeReimbursementApp {
    return new Contract(address, _abi, signerOrProvider) as FeeReimbursementApp;
  }
}
