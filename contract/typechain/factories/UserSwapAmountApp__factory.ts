/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UserSwapAmountApp,
  UserSwapAmountAppInterface,
} from "../UserSwapAmountApp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_brevisProof",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "UserSwapVerified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_appCircuitOutput",
        type: "bytes",
      },
    ],
    name: "brevisCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "brevisProof",
    outputs: [
      {
        internalType: "contract IBrevisProof",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapper",
        type: "address",
      },
    ],
    name: "getSwapAmount",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Amt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Amt",
            type: "uint256",
          },
        ],
        internalType: "struct SwapAmount",
        name: "amount",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_vkHash",
        type: "bytes32",
      },
    ],
    name: "setVkHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_chainId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "smtRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "blkNum",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "receiptIndex",
                type: "uint64",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "valueFromTopic",
                        type: "uint8",
                      },
                      {
                        internalType: "uint64",
                        name: "valueIndex",
                        type: "uint64",
                      },
                      {
                        internalType: "address",
                        name: "contractAddress",
                        type: "address",
                      },
                      {
                        internalType: "bytes32",
                        name: "logTopic0",
                        type: "bytes32",
                      },
                    ],
                    internalType: "struct Brevis.LogExtraInfo",
                    name: "logExtraInfo",
                    type: "tuple",
                  },
                  {
                    internalType: "uint64",
                    name: "logIndex",
                    type: "uint64",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct Brevis.LogInfo[5]",
                name: "logs",
                type: "tuple[5]",
              },
            ],
            internalType: "struct Brevis.ReceiptInfo[]",
            name: "receipts",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "slotValue",
                type: "bytes32",
              },
              {
                internalType: "uint64",
                name: "blockNumber",
                type: "uint64",
              },
            ],
            internalType: "struct Brevis.StorageInfo[]",
            name: "stores",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "leafHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
              },
              {
                internalType: "uint64",
                name: "blockNumber",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "blockTime",
                type: "uint64",
              },
              {
                internalType: "bytes",
                name: "leafRlpPrefix",
                type: "bytes",
              },
            ],
            internalType: "struct Brevis.TransactionInfo[]",
            name: "txs",
            type: "tuple[]",
          },
        ],
        internalType: "struct Brevis.ExtractInfos",
        name: "_extractInfos",
        type: "tuple",
      },
    ],
    name: "validateRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vkHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0346100be57601f610f3b38819003918201601f19168301916001600160401b038311848410176100c3578084926020946040528339810103126100be57516001600160a01b0390818116908190036100be576080526000543360018060a01b0319821617600055604051913391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3610e6190816100da82396080518181816101e0015281816104050152818161050001526109f10152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c908163247b0ad814610c43575080634fe840f514610c25578063715018a614610bbb5780637859f6d914610b8c57806379d6b6a2146109825780637c08aa741461022b5780638da5cb5b14610204578063c7f5aaa0146101c0578063f2fde38b146100d55763f39794e01461008d57600080fd5b346100d05760203660031901126100d0576001600160a01b036100ae610cb0565b1660005260026020526040806000206001815491015482519182526020820152f35b600080fd5b346100d05760203660031901126100d0576100ee610cb0565b600054906001600160a01b0380831691610109338414610de0565b169182156101555773ffffffffffffffffffffffffffffffffffffffff19839116176000557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608490fd5b346100d05760003660031901126100d05760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100d05760003660031901126100d05760206001600160a01b0360005416604051908152f35b346100d0576003196060368201126100d0576024359067ffffffffffffffff821682036100d05767ffffffffffffffff604435116100d057608090604435360301126100d05760405161027d81610d0b565b6044356004013581526024604435013567ffffffffffffffff81116100d05760443501366023820112156100d0576004810135906102ba82610d81565b916102c86040519384610d5f565b808352602083019136602483600a1b830101116100d05760248101925b602483600a1b830101841061086d5750505050602082015260448035013567ffffffffffffffff81116100d05760443501366023820112156100d05760048101359061033082610d81565b9161033e6040519384610d5f565b808352602083019136602460a08402830101116100d0579160248301925b602460a084028201018410610809575050505060408201526064604435013567ffffffffffffffff81116100d05736602382604435010112156100d057600481604435010135906103ac82610d81565b916103ba6040519384610d5f565b80835260208301913660248360051b83604435010101116100d0576024816044350101925b60248360051b836044350101018410610734575050505060608201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b156100d057604051631f022a9d60e21b8152600480359082015267ffffffffffffffff9092166024830152606060448301528051606483015260208082015160806084850152805160e4850181905284936101048501939092019060005b818110610676575050506040810151916063198482030160a48501526020808451928381520193019060005b81811061061d5750505060600151906063198382030160c484015281519081815260208101916020808260051b8401019401926000925b8284106105725786600081808903816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa801561056657610538575b602060405160018152f35b67ffffffffffffffff8111610550576040528061052d565b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b919395509193601f1982820301835260808651805183526020810151602084015267ffffffffffffffff604082015116604084015267ffffffffffffffff606082015116606084015201519060a060808201528151918260a083015260005b8381106106075750506020600192819260c0916000838284010152601f80199101160101970193019401919290938695946104e7565b80602080928401015160c08286010152016105d1565b9194509192602060a060019267ffffffffffffffff60808951805184526001600160a01b0386820151168685015260408101516040850152606081015160608501520151166080820152019501910191859493926104b0565b91945091926040855167ffffffffffffffff815116835267ffffffffffffffff6020820151166020840152015160408201906000915b600583106106ce57505050602061040060019201950191019185949392610484565b602060c0600192604085516060815160ff815116855267ffffffffffffffff8782015116878601526001600160a01b038482015116848601520151606084015267ffffffffffffffff85820151166080840152015160a0820152019201920191906106ac565b833567ffffffffffffffff81116100d05760a060443584018201360360231901126100d0576040519161076683610d43565b60448035850183016024810135855290810135602085015261078a90606401610cda565b60408401526107a160848386604435010101610cda565b606084015260a48285604435010101359067ffffffffffffffff82116100d0573660438385886044350101010112156100d05760249360209384936107f7913691604480358b0190920101808901359101610d99565b608082015281520194019390506103df565b60a0843603126100d05760a080602060249460405161082781610d43565b88358152610836838a01610cc6565b83820152604089013560408201526060890135606082015261085a60808a01610cda565b608082015281520195019492505061035c565b610400843603126100d05760405161088481610d27565b61088d85610cda565b815261089b60208601610cda565b602082015236605f860112156100d0576040516108b781610d43565b80366104008801116100d05760408701905b610400880182106108ed5750506040820152815261040093909301926020016102e5565b60c0823603126100d0576040519061090482610d27565b6080833603126100d0576040519061091b82610d0b565b60ff8435168435036100d05760c0926020928535815261093c848701610cda565b8482015261094c60408701610cc6565b604082015260608601356060820152815261096960808601610cda565b8382015260a085013560408201528152019101906108c9565b346100d05760403660031901126100d05767ffffffffffffffff602480358281116100d057366023820112156100d05780600401359283116100d057818101368385840101116100d05760405192632cc27dc960e11b8452600435600485015260408482816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa801561056657600094600091610b53575b50610a30368785610d99565b94855160208097012003610b115760015403610ace5750836014116100d0573560601c92806033116100d057603882013560081c906052116100d0577f292f45df7397996c13466231be3f90d7177738d82879593179a85e7d696a6894926057604093013560081c908351610aa481610cef565b838152600182820184815288600052600284528660002092518355519101558351928352820152a2005b83600a6064926040519262461bcd60e51b845260048401528201527f696e76616c696420766b000000000000000000000000000000000000000000006044820152fd5b606482866040519162461bcd60e51b83528160048401528201527f6661696c656420746f206f70656e206f757470757420636f6d6d69746d656e746044820152fd5b9450506040843d604011610b84575b81610b6f60409383610d5f565b810103126100d0576020845194015186610a24565b3d9150610b62565b346100d05760203660031901126100d057610bb36001600160a01b03600054163314610de0565b600435600155005b346100d05760003660031901126100d0576000805473ffffffffffffffffffffffffffffffffffffffff196001600160a01b03821691610bfc338414610de0565b1682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100d05760003660031901126100d0576020600154604051908152f35b346100d05760203660031901126100d0576001600160a01b039060006020610c69610cb0565b92610c7381610cef565b82815201521660005260026020526040806000208151610c9281610cef565b60206001835493848452015491019081528251918252516020820152f35b600435906001600160a01b03821682036100d057565b35906001600160a01b03821682036100d057565b359067ffffffffffffffff821682036100d057565b6040810190811067ffffffffffffffff82111761055057604052565b6080810190811067ffffffffffffffff82111761055057604052565b6060810190811067ffffffffffffffff82111761055057604052565b60a0810190811067ffffffffffffffff82111761055057604052565b90601f8019910116810190811067ffffffffffffffff82111761055057604052565b67ffffffffffffffff81116105505760051b60200190565b92919267ffffffffffffffff82116105505760405191610dc3601f8201601f191660200184610d5f565b8294818452818301116100d0578281602093846000960137010152565b15610de757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212204da49507959261010c0faea4e98abe3c89b139e3f77187dc960557eaa7f345dd64736f6c63430008140033";

type UserSwapAmountAppConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserSwapAmountAppConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserSwapAmountApp__factory extends ContractFactory {
  constructor(...args: UserSwapAmountAppConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UserSwapAmountApp";
  }

  deploy(
    _brevisProof: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UserSwapAmountApp> {
    return super.deploy(
      _brevisProof,
      overrides || {}
    ) as Promise<UserSwapAmountApp>;
  }
  getDeployTransaction(
    _brevisProof: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_brevisProof, overrides || {});
  }
  attach(address: string): UserSwapAmountApp {
    return super.attach(address) as UserSwapAmountApp;
  }
  connect(signer: Signer): UserSwapAmountApp__factory {
    return super.connect(signer) as UserSwapAmountApp__factory;
  }
  static readonly contractName: "UserSwapAmountApp";
  public readonly contractName: "UserSwapAmountApp";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserSwapAmountAppInterface {
    return new utils.Interface(_abi) as UserSwapAmountAppInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserSwapAmountApp {
    return new Contract(address, _abi, signerOrProvider) as UserSwapAmountApp;
  }
}
